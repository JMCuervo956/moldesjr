<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gráfica con Valores y Porcentajes</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <style>
        /* Ajustamos el tamaño del contenedor */
        #chart-container {
            width: 100%;
            height: 300px;
        }

        #myChart {
            display: block;
            width: 100% !important;
            height: 100% !important;
        }
    </style>
    <%- include('partials/head') %>
</head>
<body>
<%- include('partials/navigation') %>  
<div class="content">
    <div class="register-formIzq1"> 
        <div id="chart-container">
            <canvas id="myChart"></canvas>
        </div><br>
    </div>    
    <br>
    <a href="/opc1" class="btn btn-success btn-sm btnind-hover-effect">Regresar</a>
</div>    

<script>
    const labels = <%- JSON.stringify(labels) %>;  // Definimos las etiquetas aquí
    const dataValues = <%- JSON.stringify(dataValues) %>;  // Valores de la gráfica

    const total = dataValues.reduce((a, b) => a + b, 0);  // Total de valores
    const dataPercentage = dataValues.map(value => ((value / total) * 100).toFixed(2));  // Porcentajes

    // Lista de colores vivos
    const vibrantColors = [
        'rgba(255, 99, 132, 0.6)',  // Color 1
        'rgba(54, 162, 235, 0.6)',  // Color 2
        'rgba(255, 206, 86, 0.6)',  // Color 3
        'rgba(75, 192, 192, 0.6)',  // Color 4
        'rgba(153, 102, 255, 0.6)', // Color 5
        'rgba(255, 159, 64, 0.6)',  // Color 6
        'rgba(255, 99, 71, 0.6)',   // Color 7
        'rgba(100, 149, 237, 0.6)', // Color 8
        'rgba(0, 255, 0, 0.6)',     // Color 9
        'rgba(255, 215, 0, 0.6)'    // Color 10
    ];

    // Encontrar el índice del valor más bajo y más alto
    const minIndex = dataValues.indexOf(Math.min(...dataValues));
    const maxIndex = dataValues.indexOf(Math.max(...dataValues));

    // Generar colores para el número de etiquetas
    const backgroundColors = labels.map((_, index) => {
        if (index === minIndex) {
            return 'rgba(255, 0, 0, 0.6)'; // Color rojo para el porcentaje más bajo
        }
        if (index === maxIndex) {
            return 'rgba(0, 255, 0, 0.6)'; // Color verde para el porcentaje más alto
        }
        return vibrantColors[index % vibrantColors.length]; // Colores vivos para las demás
    });
    
    const borderColors = backgroundColors.map(color => color.replace('0.6', '1')); // Hacemos el color más opaco para los bordes

    const ctx = document.getElementById('myChart').getContext('2d');
    const myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,  // Usamos la constante de labels aquí
            datasets: [{
                label: 'Votos',  // Etiqueta del conjunto
                data: dataValues,  // Datos de valores
                backgroundColor: backgroundColors, // Colores de fondo
                borderColor: borderColors,  // Colores de borde
                borderWidth: 1
            }]
        },
        options: {
            aspectRatio: 1.5,  // Controlar el ratio de aspecto
            responsive: true,   // Hacer el gráfico responsive
            plugins: {
                legend: {
                    display: false  // Ocultar la leyenda
                },
                datalabels: {  // Habilitar las etiquetas sobre las barras
                    color: 'black',  // Color de las etiquetas
                    anchor: 'start',  // Etiqueta en la parte inferior
                    align: 'end',  // Alineación al final (debajo de la barra)
                    offset: 20,  // Ajuste hacia abajo de la etiqueta valor y %
                    formatter: function(value, context) {
                        const percentage = dataPercentage[context.dataIndex];
                        return `Votos: ${value}\n\n${percentage}%`;
                    }
                }
            },
            scales: {
                x: {
                    grid: {
                        display: false  // Quitar la cuadrícula vertical
                    },
                    ticks: {
                        font: {
                            weight: 'bold',  // Negrita para los nombres
                            size: 14,        // Tamaño de fuente
                            color: 'blue'    // Color de texto
                        }
                    }
                },
                y: {
                    grid: {
                        display: false
                    },
                    beginAtZero: true  // Asegurar que el eje Y comience en 0
                }
            }
        },
        plugins: [ChartDataLabels]  // Activar el plugin de DataLabels
    });
</script>


<%- include('partials/footer') %>  
</body>
</html>
