<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Ccosto</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

    <%- include('partials/head') %>
        
    <style>
        .encabezado {
        position: fixed;
        top: 0;
        width: 100%;
        height: 50px; /* Por ejemplo */
        background-color: #fff;
        z-index: 100;
        padding: 15px 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .contenido-principal {
        margin-top: 70px; /* Igual a la altura del header */
        padding: 20px;
        overflow-y: auto; /* scroll si es necesario */

        }
    </style>


</head>
<body>
  <div id="activities" style="
    border: 2px solid #f0f8ff;
    padding: 4px;
    border-radius: 6px;
    background-color: #aa2323;
    width: 100%;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    gap: 20px; /* Espacio entre botón y título */
  ">
    <a href="/opciones" class="regresar-link" style="margin-left: 20px;">Regresar</a>
    <div style="margin-left: auto; padding-right: 20px;">
      <h4 style="margin: 0; color: #ffffff;">Moldes JR</h4>
    </div>    
  </div>
    <div class="contenido-principal">
          <div class="d-flex justify-content-between align-items-center mb-0 px-4">
            <!-- Izquierda: Botones -->
            <div class="ms-5">
              <button class="btn btn-primary btn-sm" onclick="exportarExcel()">Exportar a Excel</button>
            </div>
          
            <!-- Centro: Título centrado -->
            <div class="flex-grow-1 text-center">
              <h3 class="mb-2 fw-semibold d-inline-block position-relative"
                  style="letter-spacing: 1px; color: #2c3e50; font-size: 1.5rem; text-shadow: 2px 2px 5px rgba(0,0,0,0.2); font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                Centros de Costo
                <span style="display: block; height: 3px; background-color: #3498db; margin-top: 12px; width: 100%; margin-left: auto; margin-right: auto; border-radius: 5px;"></span>
              </h3>
            </div>
    </div>

            <!-- Derecha vacía para balancear -->
            <div style="width: 200px;"></div>
          </div>

        <div class="container-fluid mt-1">
              <div class="content2">
                <div class="register-formAnchoCM">           

                  <div style="overflow-x: auto;">
                    <table id="tablaAcabados" class="table-striped">

                      <thead class="thead-dark">
                        <tr>
                          <th class="text-left">C Costo</th>
                          <th class="text-left">Descripción</th>
                          <th class="text-left">Nit</th>
                          <th class="text-left">Cliente</th>
                          <th class="text-left">Pais</th>
                          <th class="text-left">Ciudad</th>
                          <th class="text-left">Fecha Orden</th>
                          <th class="text-left">Fecha_Entrega</th>
                          <th class="text-left">Peso</th>
                          <th>Observaciones</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if (ccosto.length > 0) { %>
                          <% ccosto.forEach(ccosto => { %>
                            <tr style="line-height: 1.3;">
                              <td style="width: 50px; font-size: 14px;"><%= ccosto.idcc %></td>
                              <td style="width: 200px; font-size: 12px;"><%= ccosto.descripcion %></td>
                              <td style="width: 200px; font-size: 12px;"><%= ccosto.cliente %></td>
                              <td style="width: 200px; font-size: 12px;"><%= ccosto.clienteN %></td>
                              <td style="width: 200px; font-size: 12px;"><%= ccosto.nompais %></td>
                              <td style="width: 200px; font-size: 12px;"><%= ccosto.nomciu %></td>
                              <td style="width: 200px; font-size: 12px;">
                                  <%= ccosto.fecha_orden_formateada %>
                              </td>
                              <td style="width: 100px; font-size: 12px;">
                                <%= ccosto.fecha_entrega_formateada %>
                              </td>
                              <td style="width: 100px; font-size: 12px;"><%= ccosto.peso %></td>
                              <td style="width: 100px; font-size: 12px;"><%= ccosto.comentarios %></td>
                                </tr>
                          <% }) %>
                        <% } else { %>
                          <tr>
                            <td colspan="5">No hay Centro de costo registrado.</td>
                          </tr>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
        </div>



    <!-- Scripts de Bootstrap y jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

    <!-- SheetJS para exportar a Excel -->
    <script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>
    <script>
        function limpiarFormularioAcabado() {
            document.getElementById('formAcabado').reset();
        }

    </script>

<script>
      function exportarExcel() {
        const tabla = document.getElementById('tablaAcabados');
        const filas = Array.from(tabla.rows);
        const data = [];
        
        filas.forEach((fila, filaIndex) => {
          const celdas = Array.from(fila.cells);
          const filaDatos = [];
          celdas.forEach((celda, colIndex) => {
            let texto = celda.innerText.trim();

            // Para las fechas, convertirlas a Date y aplicar formato Excel
            if (/^\d{2}\/\d{2}\/\d{4}$/.test(texto)) {
              // Parsear dd/mm/yyyy a objeto Date
              const partes = texto.split('/');
              const dia = parseInt(partes[0], 10);
              const mes = parseInt(partes[1], 10) - 1; // mes base 0
              const anio = parseInt(partes[2], 10);
              const fecha = new Date(anio, mes, dia);
              filaDatos.push({ t: 'd', v: fecha });
            } else {
              filaDatos.push(texto);
            }
          });
          data.push(filaDatos);
        });

        // Crear la hoja desde el arreglo
        const hoja = XLSX.utils.aoa_to_sheet(data);

        // Aplicar formato de celda solo a las columnas de fecha
        // Aquí, por ejemplo, columnas 3 y 4 (fecha_orden y fecha_entrega, 0-indexed)
        const columnasFecha = [3, 4];
        columnasFecha.forEach(col => {
          for (let row = 1; row <= filas.length; row++) { // fila 1 = encabezado
            const cellAddress = XLSX.utils.encode_cell({ r: row, c: col });
            const cell = hoja[cellAddress];
            if (cell && cell.t === 'd') {
              cell.z = 'dd/mm/yyyy';
            }
          }
        });

        const libro = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(libro, hoja, "Centros de Costo");
        XLSX.writeFile(libro, "ccosto.xlsx");
      }
</script>


</body>
</html>
